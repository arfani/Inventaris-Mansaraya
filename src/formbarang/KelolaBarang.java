package formbarang;

import form.Utama;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import koneksi.Koneksi;

@SuppressWarnings("serial")
public class KelolaBarang extends javax.swing.JFrame {

    public DefaultTableModel model;

    public KelolaBarang() {
        initComponents();
        formatTabel();
        lebarkol();
        iComboR();
        iComboPindahR();
        keseluruhan();
        jml();
        kosong();
        mati();
        jComboRuangan.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelbarang = new javax.swing.JTable();
        jButtonHapus = new javax.swing.JButton();
        jButtonHapusall = new javax.swing.JButton();
        jButtonBatal = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextKode = new javax.swing.JTextField();
        jTextNamaBarang = new javax.swing.JTextField();
        jTextTahunPengadaan = new javax.swing.JTextField();
        jTextSfc = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextJumlah = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextKondisiTT = new javax.swing.JTextField();
        jTextKondisiRB = new javax.swing.JTextField();
        jTextKondisiRR = new javax.swing.JTextField();
        jTextKondisiB = new javax.swing.JTextField();
        jTextKet = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabelKode = new javax.swing.JLabel();
        jComboRuangan = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabelKode1 = new javax.swing.JLabel();
        jComboPindahR = new javax.swing.JComboBox();
        jLabelPindah = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1130, 650));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Abyssinica SIL", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Kelola Barang");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 1130, 40));

        jLabel8.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel8.setText("GEDUNG");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 60, 30));

        jLabel9.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel9.setText("nama gedung");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, -1, 30));

        jLabel11.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("nama ruangan");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 830, 30));

        jLabel12.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel12.setText("jLabel12");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 410, -1, -1));

        tabelbarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        tabelbarang.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tabelbarang.setFocusable(false);
        tabelbarang.getTableHeader().setReorderingAllowed(false);
        tabelbarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelbarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelbarang);
        if (tabelbarang.getColumnModel().getColumnCount() > 0) {
            tabelbarang.getColumnModel().getColumn(0).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, 1067, 180));

        jButtonHapus.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jButtonHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/b_drop.png"))); // NOI18N
        jButtonHapus.setText("HAPUS");
        jButtonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 220, 110, -1));

        jButtonHapusall.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jButtonHapusall.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/b_drop.png"))); // NOI18N
        jButtonHapusall.setText("HAPUS SELURUH BARANG");
        jButtonHapusall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusallActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonHapusall, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 250, 230, -1));

        jButtonBatal.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jButtonBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/s_success.png"))); // NOI18N
        jButtonBatal.setText("SELESAI");
        jButtonBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBatalActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonBatal, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 220, 110, -1));

        jButtonEdit.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jButtonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/b_edit.png"))); // NOI18N
        jButtonEdit.setText("UBAH");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 190, 110, -1));

        jLabel18.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel18.setText("Kode Barang");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 100, 30));

        jLabel3.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel3.setText("Nama Barang");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 100, 30));

        jLabel13.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel13.setText("Tahun Pengadaan");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 130, 30));

        jLabel4.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel4.setText("Spesifikasi");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 100, 30));

        jTextKode.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jTextKode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextKodeKeyPressed(evt);
            }
        });
        getContentPane().add(jTextKode, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 250, -1));

        jTextNamaBarang.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jTextNamaBarang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextNamaBarangKeyPressed(evt);
            }
        });
        getContentPane().add(jTextNamaBarang, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, 250, -1));

        jTextTahunPengadaan.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jTextTahunPengadaan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextTahunPengadaanKeyPressed(evt);
            }
        });
        getContentPane().add(jTextTahunPengadaan, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 250, -1));

        jTextSfc.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jTextSfc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextSfcKeyPressed(evt);
            }
        });
        getContentPane().add(jTextSfc, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 250, -1));

        jLabel6.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel6.setText("Kondisi");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 220, 80, 40));

        jLabel7.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel7.setText("Keterangan");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 270, 80, 30));

        jLabel5.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel5.setText("Jumlah");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 180, 80, 30));

        jLabel14.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("b");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 210, 25, -1));

        jTextJumlah.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jTextJumlah.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextJumlahKeyPressed(evt);
            }
        });
        getContentPane().add(jTextJumlah, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 180, 250, -1));

        jLabel15.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("rr");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 210, 25, -1));

        jLabel16.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("rb");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 210, 25, -1));

        jLabel17.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("tt");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 210, 25, -1));

        jTextKondisiTT.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jTextKondisiTT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextKondisiTTKeyPressed(evt);
            }
        });
        getContentPane().add(jTextKondisiTT, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 230, 25, -1));

        jTextKondisiRB.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jTextKondisiRB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextKondisiRBKeyPressed(evt);
            }
        });
        getContentPane().add(jTextKondisiRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 230, 25, -1));

        jTextKondisiRR.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jTextKondisiRR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextKondisiRRKeyPressed(evt);
            }
        });
        getContentPane().add(jTextKondisiRR, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 230, 25, -1));

        jTextKondisiB.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jTextKondisiB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextKondisiBKeyPressed(evt);
            }
        });
        getContentPane().add(jTextKondisiB, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 230, 25, -1));

        jTextKet.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jTextKet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextKetKeyPressed(evt);
            }
        });
        getContentPane().add(jTextKet, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 270, 250, -1));

        jLabelKode.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N

        jComboRuangan.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jComboRuangan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "keseluruhan" }));
        jComboRuangan.setToolTipText("");
        jComboRuangan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboRuanganItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel2.setText("RUANGAN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jComboRuangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabelKode, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboRuangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelKode, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 500, 30));

        jComboPindahR.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jComboPindahR.setToolTipText("");
        jComboPindahR.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboPindahRItemStateChanged(evt);
            }
        });

        jLabelPindah.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabelPindah.setText("PINDAH KE");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelPindah, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jComboPindahR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabelKode1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPindah, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboPindahR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelKode1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 400, 30));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        int tt = tabelbarang.getSelectedRow();
        String ruangLama = (String) model.getValueAt(tt, 0);
        String kodeLama = (String) model.getValueAt(tt, 1);
        String namaLama = (String) model.getValueAt(tt, 2);
        String thLama = (String) model.getValueAt(tt, 3);
        String sfcLama = (String) model.getValueAt(tt, 4);
        String jmlLama = (String) model.getValueAt(tt, 5);
        String bLama = (String) model.getValueAt(tt, 6);
        String rrLama = (String) model.getValueAt(tt, 7);
        String rbLama = (String) model.getValueAt(tt, 8);
        String tttLama = (String) model.getValueAt(tt, 9);
        String ketLama = (String) model.getValueAt(tt, 10);
        String ruang = jComboPindahR.getSelectedItem().toString();
        String kode = jTextKode.getText();
        String nama = jTextNamaBarang.getText();
        String th = jTextTahunPengadaan.getText();
        String sfc = jTextSfc.getText();
        String jml = jTextJumlah.getText();
        String b = jTextKondisiB.getText();
        String rr = jTextKondisiRR.getText();
        String rb = jTextKondisiRB.getText();
        String ttt = jTextKondisiTT.getText();
        String ket = jTextKet.getText();
        if (ruangLama.equals(ruang) && kodeLama.equals(kode) && namaLama.equals(nama) && thLama.equals(th)
                && sfcLama.equals(sfc) && jmlLama.equals(jml) && bLama.equals(b) && rrLama.equals(rr)
                && rbLama.equals(rb) && tttLama.equals(ttt) && ketLama.equals(ket)) {
            JOptionPane.showMessageDialog(rootPane, "Anda belum memodifikasi data!");
        } else {
            hitungkondisi();
            if (jTextKode.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "kode barang tidak boleh kosong !");
                jTextKode.requestFocus();
            } else if (jTextNamaBarang.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "nama barang tidak boleh kosong !");
                jTextNamaBarang.requestFocus();
            } else if (jTextTahunPengadaan.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "tahun pengadaan tidak boleh kosong !");
                jTextTahunPengadaan.requestFocus();
            } else if (jTextJumlah.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "jumlah barang tidak boleh kosong !");
                jTextJumlah.requestFocus();
            } else if (jTextKondisiB.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Mohon isi field kondisi");
                jTextKondisiB.requestFocus(true);
            } else if (jTextKondisiRR.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Mohon isi field kondisi");
                jTextKondisiRR.requestFocus(true);
            } else if (jTextKondisiRB.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Mohon isi field kondisi");
                jTextKondisiRB.requestFocus(true);
            } else if (jTextKondisiTT.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Mohon isi field kondisi");
                jTextKondisiTT.requestFocus(true);
            } else if (kondisi == false) {
                JOptionPane.showMessageDialog(rootPane, "Jumlah barang dan kondisi barang tidak cocok !");
                jTextJumlah.requestFocus();
            } else {
                update();
                mati();
            }
        }
        kondisi = true;
    }//GEN-LAST:event_jButtonEditActionPerformed
    //

    public void update() {
        int t = tabelbarang.getSelectedRow();
        String kodeLama = (String) model.getValueAt(t, 1);
        String kodeBaru = jTextKode.getText();
        String nBarang = jTextNamaBarang.getText();
        String tPengadaan = jTextTahunPengadaan.getText();
        String sfc = jTextSfc.getText();
        String jml = jTextJumlah.getText();
        String kondisiB = jTextKondisiB.getText();
        String kondisiRR = jTextKondisiRR.getText();
        String kondisiRB = jTextKondisiRB.getText();
        String kondisiTT = jTextKondisiTT.getText();
        String ket = jTextKet.getText();

        try {
            Connection c = Koneksi.getkoneksi();

            String sql = "update detailbarang set "
                    + "ruanganfk='" + jLabelKode1.getText() + "', "
                    + "kode_barang='" + kodeBaru + "', "
                    + "nama_barang='" + nBarang + "', "
                    + "sfc='" + sfc + "', "
                    + "jumlah='" + jml + "', "
                    + "kondisi_b='" + kondisiB + "', "
                    + "kondisi_rr='" + kondisiRR + "', "
                    + "kondisi_rb='" + kondisiRB + "', "
                    + "kondisi_tt='" + kondisiTT + "', "
                    + "tahun_pengadaan='" + tPengadaan + "', "
                    + "keterangan='" + ket + "' "
                    + "where kode_barang='" + kodeLama + "'";
            PreparedStatement p = c.prepareStatement(sql);
            p.executeUpdate();
            p.close();
            JOptionPane.showMessageDialog(null, "Data barang tersimpan");
            String a = jComboRuangan.getSelectedItem().toString();
            if (a.equals("keseluruhan")) {
                keseluruhan();
            } else {
                tampilPerRuangan();
            }
            jml();
            kosong();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Pesan Erorr :\n"
                    + "*. " + e.getMessage(),
                    "Kesalahan Update Data",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void jButtonBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBatalActionPerformed
        new Utama().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonBatalActionPerformed

    private void jComboRuanganItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboRuanganItemStateChanged
        try {
            String namaRuang = jComboRuangan.getSelectedItem().toString();
            Connection c = Koneksi.getkoneksi();
            Statement s = c.createStatement();

            String sql = "select * from ruangan where nama_ruangan='" + namaRuang + "'";
            ResultSet r = s.executeQuery(sql);
            while (r.next()) {
                String kodeRuangan = r.getString("kode_ruangan");
                jLabelKode.setText(kodeRuangan);
            }
            r.close();
            s.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error masukkan kode \n" + e.getMessage());
        }
        jLabel11.setText(jComboRuangan.getSelectedItem().toString());
        iGedung();
        String a = jComboRuangan.getSelectedItem().toString();
        if (a.equals("keseluruhan")) {
            keseluruhan();
        } else {
            formatTabel();
            lebarkol();
            tampilPerRuangan();
        }
        jml();
        kosong();
        mati();
    }//GEN-LAST:event_jComboRuanganItemStateChanged

    private void jTextNamaBarangKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextNamaBarangKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextTahunPengadaan.requestFocus();
        }
    }//GEN-LAST:event_jTextNamaBarangKeyPressed

    private void jTextJumlahKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextJumlahKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextKondisiB.requestFocus();
        }
    }//GEN-LAST:event_jTextJumlahKeyPressed

    private void jTextKondisiBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextKondisiBKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextKondisiRR.requestFocus();
        }
    }//GEN-LAST:event_jTextKondisiBKeyPressed

    private void jTextKetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextKetKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonEdit.requestFocus();
        }
    }//GEN-LAST:event_jTextKetKeyPressed

    private void jTextTahunPengadaanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextTahunPengadaanKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextSfc.requestFocus();
        }
    }//GEN-LAST:event_jTextTahunPengadaanKeyPressed

    private void jTextSfcKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextSfcKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextJumlah.requestFocus();
        }
    }//GEN-LAST:event_jTextSfcKeyPressed

    private void jTextKondisiRRKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextKondisiRRKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextKondisiRB.requestFocus();
        }
    }//GEN-LAST:event_jTextKondisiRRKeyPressed

    private void jTextKondisiRBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextKondisiRBKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextKondisiTT.requestFocus();
        }
    }//GEN-LAST:event_jTextKondisiRBKeyPressed

    private void jTextKondisiTTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextKondisiTTKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextKet.requestFocus();
        }
    }//GEN-LAST:event_jTextKondisiTTKeyPressed

    private void jTextKodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextKodeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextNamaBarang.requestFocus();
        }
    }//GEN-LAST:event_jTextKodeKeyPressed

    private void jButtonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusActionPerformed
        int tt = tabelbarang.getSelectedRow();
        String namaBarangLama = (String) model.getValueAt(tt, 2);
        String kodeBarangLama = (String) model.getValueAt(tt, 1);

        if (tt == -1) {
            JOptionPane.showMessageDialog(null, "Tekan tombol HAPUS kembali setelah anda memilih data"
                    + " pada tabel yang akan dihapus!");
        } else {
            int h = JOptionPane.showConfirmDialog(null, "Hapus " + namaBarangLama + " dengan kode " + kodeBarangLama + " ?",
                    "Konfirmasi",
                    JOptionPane.YES_NO_OPTION);
            if (h == JOptionPane.YES_OPTION) {
                hapus();
                String a = jComboRuangan.getSelectedItem().toString();
                if (a.equals("keseluruhan")) {
                    keseluruhan();
                } else {
                    tampilPerRuangan();
                }
                mati();
            }
        }
    }//GEN-LAST:event_jButtonHapusActionPerformed
//

    public void hapusall() {
        try {
            Connection c = Koneksi.getkoneksi();

            String sql = "truncate table detailbarang";
            PreparedStatement p = c.prepareStatement(sql);
            p.executeUpdate();
            p.close();
            JOptionPane.showMessageDialog(null, "Seluruh barang terhapus");
            kosong();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error hapus seluruh data barang\n" + e.getMessage());
        }
    }

//
    public void hapus() {
        int tt = tabelbarang.getSelectedRow();
        String kodeLama = (String) model.getValueAt(tt, 1);
        String namaLama = (String) model.getValueAt(tt, 2);
        try {
            Connection c = Koneksi.getkoneksi();

            String sql = "delete from detailbarang where kode_barang='" + kodeLama + "'";
            PreparedStatement p = c.prepareStatement(sql);
            p.executeUpdate();
            p.close();
            JOptionPane.showMessageDialog(null, namaLama + " terhapus");
            kosong();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error hapus data\n" + e.getMessage());
        }
    }

    private void tabelbarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelbarangMouseClicked
        int t = tabelbarang.getSelectedRow();
        if (t == -1) {
            return;
        }
        String ruang = (String) model.getValueAt(t, 0);
        jComboPindahR.setSelectedItem(ruang);
        String kode = (String) model.getValueAt(t, 1);
        jTextKode.setText(kode);
        String namaBarang = (String) model.getValueAt(t, 2);
        jTextNamaBarang.setText(namaBarang);
        String tPengadaan = (String) model.getValueAt(t, 3);
        jTextTahunPengadaan.setText(tPengadaan);
        String sfc = (String) model.getValueAt(t, 4);
        jTextSfc.setText(sfc);
        String jml = (String) model.getValueAt(t, 5);
        jTextJumlah.setText(jml);
        String B = (String) model.getValueAt(t, 6);
        jTextKondisiB.setText(B);
        String RR = (String) model.getValueAt(t, 7);
        jTextKondisiRR.setText(RR);
        String RB = (String) model.getValueAt(t, 8);
        jTextKondisiRB.setText(RB);
        String TT = (String) model.getValueAt(t, 9);
        jTextKondisiTT.setText(TT);
        String ket = (String) model.getValueAt(t, 10);
        jTextKet.setText(ket);
        hidup();
    }//GEN-LAST:event_tabelbarangMouseClicked

    private void jButtonHapusallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusallActionPerformed
        int h = JOptionPane.showConfirmDialog(null, "Hapus seluruh barang ?",
                "Konfirmasi",
                JOptionPane.YES_NO_OPTION);
        if (h == JOptionPane.YES_OPTION) {
            hapusall();
            String a = jComboRuangan.getSelectedItem().toString();
            if (a.equals("keseluruhan")) {
                keseluruhan();
            } else {
                tampilPerRuangan();
            }
            mati();
        }
    }//GEN-LAST:event_jButtonHapusallActionPerformed

    private void jComboPindahRItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboPindahRItemStateChanged
        try {
            String namaRuang = jComboPindahR.getSelectedItem().toString();
            Connection c = Koneksi.getkoneksi();
            Statement s = c.createStatement();

            String sql = "select * from ruangan where nama_ruangan='" + namaRuang + "'";
            ResultSet r = s.executeQuery(sql);
            while (r.next()) {
                String kodeRuangan = r.getString("kode_ruangan");
                jLabelKode1.setText(kodeRuangan);
            }
            r.close();
            s.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error masukkan kode \n" + e.getMessage());
        }
    }//GEN-LAST:event_jComboPindahRItemStateChanged

    //
    public void mati() {
        jTextKode.setEnabled(false);
        jTextNamaBarang.setEnabled(false);
        jTextTahunPengadaan.setEnabled(false);
        jTextSfc.setEnabled(false);
        jTextJumlah.setEnabled(false);
        jTextKondisiB.setEnabled(false);
        jTextKondisiRR.setEnabled(false);
        jTextKondisiRB.setEnabled(false);
        jTextKondisiTT.setEnabled(false);
        jTextKet.setEnabled(false);
        jLabelPindah.setVisible(false);
        jComboPindahR.setVisible(false);
        jButtonEdit.setEnabled(false);
        jButtonHapus.setEnabled(false);
        jLabelKode1.setVisible(false);
    }

    //
    public void hidup() {
        jTextKode.setEnabled(true);
        jTextNamaBarang.setEnabled(true);
        jTextTahunPengadaan.setEnabled(true);
        jTextSfc.setEnabled(true);
        jTextJumlah.setEnabled(true);
        jTextKondisiB.setEnabled(true);
        jTextKondisiRR.setEnabled(true);
        jTextKondisiRB.setEnabled(true);
        jTextKondisiTT.setEnabled(true);
        jTextKet.setEnabled(true);
        jLabelPindah.setVisible(true);
        jComboPindahR.setVisible(true);
        jButtonEdit.setEnabled(true);
        jButtonHapus.setEnabled(true);
        jLabelKode1.setVisible(true);
    }

    //
    Boolean kondisi = true;

    public void hitungkondisi() {
        try {
            int b = Integer.parseInt(jTextKondisiB.getText());
            int rr = Integer.parseInt(jTextKondisiRR.getText());
            int rb = Integer.parseInt(jTextKondisiRB.getText());
            int tt = Integer.parseInt(jTextKondisiTT.getText());
            int jml = Integer.parseInt(jTextJumlah.getText());
            int Hasil = b + rr + rb + tt;
            if (Hasil != jml) {
                kondisi = false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Pastikan anda memasukkan jumlah dan kondisi barang dengan angka valid! \n" + e.getMessage());
        }
    }

    //
    public void lebarkol() {
        TableColumn kol;
        tabelbarang.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        kol = tabelbarang.getColumnModel().getColumn(0);
        kol.setPreferredWidth(128);
        kol = tabelbarang.getColumnModel().getColumn(1);
        kol.setPreferredWidth(128);
        kol = tabelbarang.getColumnModel().getColumn(2);
        kol.setPreferredWidth(200);
        kol = tabelbarang.getColumnModel().getColumn(3);
        kol.setPreferredWidth(70);
        kol = tabelbarang.getColumnModel().getColumn(4);
        kol.setPreferredWidth(100);
        kol = tabelbarang.getColumnModel().getColumn(5);
        kol.setPreferredWidth(50);
        kol = tabelbarang.getColumnModel().getColumn(6);
        kol.setPreferredWidth(60);
        kol = tabelbarang.getColumnModel().getColumn(7);
        kol.setPreferredWidth(60);
        kol = tabelbarang.getColumnModel().getColumn(8);
        kol.setPreferredWidth(60);
        kol = tabelbarang.getColumnModel().getColumn(9);
        kol.setPreferredWidth(60);
        kol = tabelbarang.getColumnModel().getColumn(10);
        kol.setPreferredWidth(150);
    }

    //
    public void jml() {
        int a = tabelbarang.getRowCount();
        jLabel12.setText("Jumlah barang = " + String.valueOf(a));
    }

    //
    public void formatTabel() {
        jLabel11.setText("keseluruhan");
        jLabel9.setText("\"pilih ruangan\"");
        //membuat format tabel
        model = new DefaultTableModel();

        tabelbarang.setModel(model);

        model.addColumn("Nama Ruangan");
        model.addColumn("Kode Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Th Peng");
        model.addColumn("Sfc");
        model.addColumn("Jumlah");
        model.addColumn("Kond B");
        model.addColumn("Kond RR");
        model.addColumn("Kond RB");
        model.addColumn("Kond TT");
        model.addColumn("Keterangan");
    }

    //
    public void kosong() {
        jTextKode.setText("");
        jTextNamaBarang.setText("");
        jTextTahunPengadaan.setText("");
        jTextSfc.setText("");
        jTextJumlah.setText("1");
        jTextKondisiB.setText("0");
        jTextKondisiRR.setText("0");
        jTextKondisiRB.setText("0");
        jTextKondisiTT.setText("0");
        jTextKet.setText("");
    }

    //
    public void tampilPerRuangan() {
        String combo = jComboRuangan.getSelectedItem().toString();
        jLabel11.setText(combo);
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        iGedung();
        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "select * from detailbarang,ruangan "
                    + "where ruangan.kode_ruangan=detailbarang.ruanganfk and "
                    + "ruanganfk='" + jLabelKode.getText() + "'";
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                Object[] o = new Object[11];
                o[0] = rs.getString("nama_ruangan");
                o[1] = rs.getString("kode_barang");
                o[2] = rs.getString("nama_barang");
                o[3] = rs.getString("tahun_pengadaan");
                o[4] = rs.getString("sfc");
                o[5] = rs.getString("jumlah");
                o[6] = rs.getString("kondisi_b");
                o[7] = rs.getString("kondisi_rr");
                o[8] = rs.getString("kondisi_rb");
                o[9] = rs.getString("kondisi_tt");
                o[10] = rs.getString("keterangan");

                model.addRow(o);
            }
            rs.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error tampil per ruangan\n" + e.getMessage());
        }
    }

    //
    public void keseluruhan() {
        jLabelKode.setText(null);
        jLabel9.setText("\"pilih ruangan\"");
        jLabel11.setText("Keseluruhan");
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        iGedung();
        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "select * from detailbarang,ruangan "
                    + "where ruangan.kode_ruangan=detailbarang.ruanganfk order by ruanganfk";
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                Object[] o = new Object[11];
                o[0] = rs.getString("nama_ruangan");
                o[1] = rs.getString("kode_barang");
                o[2] = rs.getString("nama_barang");
                o[3] = rs.getString("tahun_pengadaan");
                o[4] = rs.getString("sfc");
                o[5] = rs.getString("jumlah");
                o[6] = rs.getString("kondisi_b");
                o[7] = rs.getString("kondisi_rr");
                o[8] = rs.getString("kondisi_rb");
                o[9] = rs.getString("kondisi_tt");
                o[10] = rs.getString("keterangan");

                model.addRow(o);
            }
            rs.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error tampil keseluruhan\n" + e.getMessage());
        }
    }

    //
    @SuppressWarnings("unchecked")
    public void iComboPindahR() {
        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "select nama_ruangan from ruangan";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                jComboPindahR.addItem(rs.getString("nama_ruangan"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error insert data ke combo pindah\n" + e.getMessage());
        }
    }

    //
    @SuppressWarnings("unchecked")
    public void iComboR() {
        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "select nama_ruangan from ruangan";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                jComboRuangan.addItem(rs.getString("nama_ruangan"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error insert data ke combobox\n" + e.getMessage());
        }
    }

    //
    public void iGedung() {
        String combo = jComboRuangan.getSelectedItem().toString();
        try {

            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();
            String sql = "select gedung.nama_gedung from gedung,ruangan "
                    + "where gedung.kode_gedung=ruangan.gedungfk and "
                    + "ruangan.nama_ruangan ='" + combo + "'";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                jLabel9.setText(rs.getString("nama_gedung"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error tampilkan nama gedung\n" + e.getMessage());
        }
    }

    //
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KelolaBarang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBatal;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonHapus;
    private javax.swing.JButton jButtonHapusall;
    private javax.swing.JComboBox jComboPindahR;
    private javax.swing.JComboBox jComboRuangan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelKode;
    private javax.swing.JLabel jLabelKode1;
    private javax.swing.JLabel jLabelPindah;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextJumlah;
    private javax.swing.JTextField jTextKet;
    private javax.swing.JTextField jTextKode;
    private javax.swing.JTextField jTextKondisiB;
    private javax.swing.JTextField jTextKondisiRB;
    private javax.swing.JTextField jTextKondisiRR;
    private javax.swing.JTextField jTextKondisiTT;
    private javax.swing.JTextField jTextNamaBarang;
    private javax.swing.JTextField jTextSfc;
    private javax.swing.JTextField jTextTahunPengadaan;
    private javax.swing.JTable tabelbarang;
    // End of variables declaration//GEN-END:variables
}
