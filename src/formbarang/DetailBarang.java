package formbarang;

import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import koneksi.Koneksi;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

@SuppressWarnings("serial")
public class DetailBarang extends javax.swing.JFrame {

    public DefaultTableModel model;

    public DetailBarang() {
        initComponents();
        iComboR();
        iComboTh();
        keseluruhan();
        jml();
        jComboRuangan.requestFocus();
        jLabel11.setText("Keseluruhan");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelbarang = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButtonPrintAll = new javax.swing.JButton();
        jButtonSelesai = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldCariKode = new javax.swing.JTextField();
        jComboThPeng = new javax.swing.JComboBox();
        jComboRuangan = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabelKode = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1030, 580));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Abyssinica SIL", 1, 36)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Detail barang inventaris MANSARAYA");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 1030, 40));

        tabelbarang.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        tabelbarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        tabelbarang.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tabelbarang.setFocusable(false);
        tabelbarang.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelbarang);
        if (tabelbarang.getColumnModel().getColumnCount() > 0) {
            tabelbarang.getColumnModel().getColumn(0).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 960, 180));

        jLabel11.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("nama ruangan");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 620, 20));

        jLabel12.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel12.setText("jumlah");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 260, 250, 30));

        jButtonPrintAll.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jButtonPrintAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/b_print.png"))); // NOI18N
        jButtonPrintAll.setText("CETAK");
        jButtonPrintAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintAllActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonPrintAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 510, 110, 30));

        jButtonSelesai.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jButtonSelesai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/s_success.png"))); // NOI18N
        jButtonSelesai.setText("SELESAI");
        jButtonSelesai.setPreferredSize(new java.awt.Dimension(69, 23));
        jButtonSelesai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelesaiActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSelesai, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 510, 110, 30));

        jLabel4.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel4.setText("Menurut Kode");
        jLabel4.setAlignmentY(0.0F);

        jTextFieldCariKode.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jTextFieldCariKode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldCariKodeKeyReleased(evt);
            }
        });

        jComboThPeng.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jComboThPeng.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "..pilih tahun.." }));
        jComboThPeng.setToolTipText("");
        jComboThPeng.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboThPengItemStateChanged(evt);
            }
        });

        jComboRuangan.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jComboRuangan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "keseluruhan" }));
        jComboRuangan.setToolTipText("");
        jComboRuangan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboRuanganItemStateChanged(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel9.setText("nama gedung");

        jLabel8.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel8.setText("GEDUNG");

        jLabel2.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel2.setText("RUANGAN");

        jLabel3.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel3.setText("Th Pengadaan");

        jLabelKode.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jComboRuangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabelKode, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jComboThPeng, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jTextFieldCariKode, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboRuangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboThPeng, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldCariKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabelKode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 500, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSelesaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelesaiActionPerformed
        new Cek().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonSelesaiActionPerformed

    private void jComboRuanganItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboRuanganItemStateChanged
        try {
            String nama = jComboRuangan.getSelectedItem().toString();
            Connection c = Koneksi.getkoneksi();
            Statement s = c.createStatement();

            String sql = "select * from ruangan where nama_ruangan='"+nama+"'";
            ResultSet r = s.executeQuery(sql);
            while (r.next()) {
                String kodeRuangan = r.getString("kode_ruangan");
                jLabelKode.setText(kodeRuangan);
            }
            r.close();
            s.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error masukkan kode \n" + e.getMessage());
        }
        jLabel11.setText(jComboRuangan.getSelectedItem().toString());
        iGedung();
        String a = jComboRuangan.getSelectedItem().toString();
        if (a.equals("keseluruhan")) {
            keseluruhan();
        } else {
            tampilPerRuangan();
        }
        jml();
        jComboThPeng.setSelectedIndex(0);
    }//GEN-LAST:event_jComboRuanganItemStateChanged

    private void jComboThPengItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboThPengItemStateChanged
        tampilPerTh();
        jml();
        jComboRuangan.setSelectedIndex(0);
    }//GEN-LAST:event_jComboThPengItemStateChanged

    @SuppressWarnings("unchecked")
    private void jButtonPrintAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintAllActionPerformed
        String a = jComboRuangan.getSelectedItem().toString();
        if (a.equals("keseluruhan")) {
            try {
                String filename = "src/laporan/DetailBarangAll.jasper";

                Connection con = Koneksi.getkoneksi();
                File report = new File(filename);
                @SuppressWarnings("deprecation")
                JasperReport jsp = (JasperReport) JRLoader.loadObject(report.getPath());
                @SuppressWarnings("unchecked")
                JasperPrint jspprint = JasperFillManager.fillReport(jsp, null, con);
                JasperViewer.viewReport(jspprint, false);

                JasperViewer.setDefaultLookAndFeelDecorated(true);

            } catch (JRException e) {
                JOptionPane.showMessageDialog(rootPane, "error cetak : " + e.getMessage());
            }
        } else {
            try {
                String filename = "src/laporan/DetailBarang.jasper";
                HashMap parameter = new HashMap();
                parameter.put("BrgPerRuang", jComboRuangan.getSelectedItem().toString());
                Connection con = Koneksi.getkoneksi();
                File report = new File(filename);
                @SuppressWarnings("deprecation")
                JasperReport jsp = (JasperReport) JRLoader.loadObject(report.getPath());
                JasperPrint jspprint = JasperFillManager.fillReport(jsp, parameter, con);
                JasperViewer.viewReport(jspprint, false);

                JasperViewer.setDefaultLookAndFeelDecorated(true);

            } catch (JRException e) {
                JOptionPane.showMessageDialog(rootPane, "error cetak : " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButtonPrintAllActionPerformed

    private void jTextFieldCariKodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCariKodeKeyReleased
        tampilSesuaiKode();
        jml();
    }//GEN-LAST:event_jTextFieldCariKodeKeyReleased

    //
    public void jml() {
        int a = tabelbarang.getRowCount();
        jLabel12.setText("Jumlah barang = " + String.valueOf(a));
    }

    //
    public void tampilPerRuangan() {
        String ruang = jComboRuangan.getSelectedItem().toString();
        jLabel11.setText(ruang);
        model = new DefaultTableModel();

        tabelbarang.setModel(model);

        model.addColumn("Kode Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Sfc");
        model.addColumn("Jumlah");
        model.addColumn("Kond B");
        model.addColumn("Kond RR");
        model.addColumn("Kond RB");
        model.addColumn("Kond TT");
        model.addColumn("Th Peng");
        model.addColumn("Keterangan");
        TableColumn kol;
        tabelbarang.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);

        kol = tabelbarang.getColumnModel().getColumn(0);
        kol.setPreferredWidth(225);
        kol = tabelbarang.getColumnModel().getColumn(1);
        kol.setPreferredWidth(225);
        kol = tabelbarang.getColumnModel().getColumn(2);
        kol.setPreferredWidth(60);
        kol = tabelbarang.getColumnModel().getColumn(3);
        kol.setPreferredWidth(50);
        kol = tabelbarang.getColumnModel().getColumn(4);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(5);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(6);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(7);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(8);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(9);
        kol.setPreferredWidth(110);
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "select * from detailbarang,ruangan where "
                    + "ruangan.kode_ruangan=detailbarang.ruanganfk and nama_ruangan='" + ruang + "' "
                    + "order by nama_barang";
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                Object[] o = new Object[10];
                o[0] = rs.getString("kode_barang");
                o[1] = rs.getString("nama_barang");
                o[2] = rs.getString("sfc");
                o[3] = rs.getString("jumlah");
                o[4] = rs.getString("kondisi_b");
                o[5] = rs.getString("kondisi_rr");
                o[6] = rs.getString("kondisi_rb");
                o[7] = rs.getString("kondisi_tt");
                o[8] = rs.getString("tahun_pengadaan");
                o[9] = rs.getString("keterangan");

                model.addRow(o);
            }
            rs.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error tampil per ruangan\n" + e.getMessage());
        }
    }

    //
    public void tampilSesuaiKode() {
        String kode = jTextFieldCariKode.getText();
        model = new DefaultTableModel();

        tabelbarang.setModel(model);

        model.addColumn("Ruangan");
        model.addColumn("Kode Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Sfc");
        model.addColumn("Jumlah");
        model.addColumn("Kond B");
        model.addColumn("Kond RR");
        model.addColumn("Kond RB");
        model.addColumn("Kond TT");
        model.addColumn("Th Peng");
        model.addColumn("Keterangan");
        TableColumn kol;
        tabelbarang.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        kol = tabelbarang.getColumnModel().getColumn(0);
        kol.setPreferredWidth(150);
        kol = tabelbarang.getColumnModel().getColumn(1);
        kol.setPreferredWidth(150);
        kol = tabelbarang.getColumnModel().getColumn(2);
        kol.setPreferredWidth(150);
        kol = tabelbarang.getColumnModel().getColumn(3);
        kol.setPreferredWidth(60);
        kol = tabelbarang.getColumnModel().getColumn(4);
        kol.setPreferredWidth(50);
        kol = tabelbarang.getColumnModel().getColumn(5);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(6);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(7);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(8);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(9);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(10);
        kol.setPreferredWidth(110);
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "select * from detailbarang,ruangan where "
                    + "ruangan.kode_ruangan=detailbarang.ruanganfk and "
                    + "kode_barang='" + kode + "' ";
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                Object[] o = new Object[11];
                o[0] = rs.getString("nama_ruangan");
                o[1] = rs.getString("kode_barang");
                o[2] = rs.getString("nama_barang");
                o[3] = rs.getString("sfc");
                o[4] = rs.getString("jumlah");
                o[5] = rs.getString("kondisi_b");
                o[6] = rs.getString("kondisi_rr");
                o[7] = rs.getString("kondisi_rb");
                o[8] = rs.getString("kondisi_tt");
                o[9] = rs.getString("tahun_pengadaan");
                o[10] = rs.getString("keterangan");

                model.addRow(o);
            }
            rs.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error tampil per kode\n" + e.getMessage());
        }
    }

    //
    public void tampilPerTh() {
        String thn = jComboThPeng.getSelectedItem().toString();
        jLabel11.setText("Pengadaan Tahun " + thn);

        model = new DefaultTableModel();

        tabelbarang.setModel(model);

        model.addColumn("Ruangan");
        model.addColumn("Kode Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Sfc");
        model.addColumn("Jumlah");
        model.addColumn("Kond B");
        model.addColumn("Kond RR");
        model.addColumn("Kond RB");
        model.addColumn("Kond TT");
        model.addColumn("Th Peng");
        model.addColumn("Keterangan");
        TableColumn kol;
        tabelbarang.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        kol = tabelbarang.getColumnModel().getColumn(0);
        kol.setPreferredWidth(150);
        kol = tabelbarang.getColumnModel().getColumn(1);
        kol.setPreferredWidth(150);
        kol = tabelbarang.getColumnModel().getColumn(2);
        kol.setPreferredWidth(150);
        kol = tabelbarang.getColumnModel().getColumn(3);
        kol.setPreferredWidth(60);
        kol = tabelbarang.getColumnModel().getColumn(4);
        kol.setPreferredWidth(50);
        kol = tabelbarang.getColumnModel().getColumn(5);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(6);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(7);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(8);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(9);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(10);
        kol.setPreferredWidth(110);
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "select * from detailbarang,ruangan where "
                    + "detailbarang.ruanganfk=ruangan.kode_ruangan and tahun_pengadaan='" + thn + "' "
                    + "order by nama_ruangan";
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                Object[] o = new Object[11];
                o[0] = rs.getString("nama_ruangan");
                o[1] = rs.getString("kode_barang");
                o[2] = rs.getString("nama_barang");
                o[3] = rs.getString("sfc");
                o[4] = rs.getString("jumlah");
                o[5] = rs.getString("kondisi_b");
                o[6] = rs.getString("kondisi_rr");
                o[7] = rs.getString("kondisi_rb");
                o[8] = rs.getString("kondisi_tt");
                o[9] = rs.getString("tahun_pengadaan");
                o[10] = rs.getString("keterangan");

                model.addRow(o);
            }
            rs.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error tampil per tahun pengadaan\n" + e.getMessage());
        }
    }

    //
    public void keseluruhan() {
        jLabelKode.setText(null);
        jLabel9.setText("\"pilih ruangan\"");
        //membuat format tabel
        model = new DefaultTableModel();
        tabelbarang.setModel(model);

        model.addColumn("Ruangan");
        model.addColumn("Kode Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Sfc");
        model.addColumn("Jumlah");
        model.addColumn("Kond B");
        model.addColumn("Kond RR");
        model.addColumn("Kond RB");
        model.addColumn("Kond TT");
        model.addColumn("Th Peng");
        model.addColumn("Keterangan");
        TableColumn kol;
        tabelbarang.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        kol = tabelbarang.getColumnModel().getColumn(0);
        kol.setPreferredWidth(150);
        kol = tabelbarang.getColumnModel().getColumn(1);
        kol.setPreferredWidth(150);
        kol = tabelbarang.getColumnModel().getColumn(2);
        kol.setPreferredWidth(150);
        kol = tabelbarang.getColumnModel().getColumn(3);
        kol.setPreferredWidth(60);
        kol = tabelbarang.getColumnModel().getColumn(4);
        kol.setPreferredWidth(50);
        kol = tabelbarang.getColumnModel().getColumn(5);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(6);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(7);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(8);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(9);
        kol.setPreferredWidth(55);
        kol = tabelbarang.getColumnModel().getColumn(10);
        kol.setPreferredWidth(110);
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "select * from detailbarang,ruangan where "
                    + "detailbarang.ruanganfk=ruangan.kode_ruangan order by nama_ruangan,nama_barang";
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                Object[] o = new Object[11];
                o[0] = rs.getString("nama_ruangan");
                o[1] = rs.getString("kode_barang");
                o[2] = rs.getString("nama_barang");
                o[3] = rs.getString("sfc");
                o[4] = rs.getString("jumlah");
                o[5] = rs.getString("kondisi_b");
                o[6] = rs.getString("kondisi_rr");
                o[7] = rs.getString("kondisi_rb");
                o[8] = rs.getString("kondisi_tt");
                o[9] = rs.getString("tahun_pengadaan");
                o[10] = rs.getString("keterangan");

                model.addRow(o);
            }
            rs.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error tampil keseluruhan\n" + e.getMessage());
        }
    }

    //
    @SuppressWarnings("unchecked")
    public void iComboR() {
        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "select nama_ruangan from ruangan";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                jComboRuangan.addItem(rs.getString("nama_ruangan"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error insert data ke combobox\n" + e.getMessage());
        }
    }

    //
    @SuppressWarnings("unchecked")
    public void iComboTh() {
        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "select detailbarang.tahun_pengadaan from detailbarang "
                    + "group by tahun_pengadaan";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                jComboThPeng.addItem(rs.getString("tahun_pengadaan"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error insert tahun ke combobox\n" + e.getMessage());
            System.exit(0);
        }
    }

    //
    public void iGedung() {
        String combo = jComboRuangan.getSelectedItem().toString();
        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();
            String sql = "select gedung.nama_gedung from gedung,ruangan "
                    + "where gedung.kode_gedung=ruangan.gedungfk and "
                    + "ruangan.nama_ruangan ='" + combo + "'";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                jLabel9.setText(rs.getString("nama_gedung"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error tampilkan nama gedung\n" + e.getMessage());
        }

    }

    //
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DetailBarang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPrintAll;
    private javax.swing.JButton jButtonSelesai;
    private javax.swing.JComboBox jComboRuangan;
    private javax.swing.JComboBox jComboThPeng;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelKode;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldCariKode;
    private javax.swing.JTable tabelbarang;
    // End of variables declaration//GEN-END:variables
}
