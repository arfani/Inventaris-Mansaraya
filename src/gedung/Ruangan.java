/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gedung;

import form.Utama;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import koneksi.Koneksi;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author arfani hidayat
 */
@SuppressWarnings("serial")
public class Ruangan extends javax.swing.JFrame {

    public DefaultTableModel model;

    public Ruangan() {
        initComponents();
        formatTabel();
        iGedung();
        jml();
        iPindahG();
        jCheckBox1.setSelected(true);
        jCheckBox1ActionPerformed(null);
        hilang();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelRuangan = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButtonHapus1 = new javax.swing.JButton();
        jButtonSelesai = new javax.swing.JButton();
        jButtonPrint = new javax.swing.JButton();
        jButtonHapus = new javax.swing.JButton();
        jButtonTambah = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jButtonBatal = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabelKode1 = new javax.swing.JLabel();
        jComboGedung = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jComboPindahG = new javax.swing.JComboBox();
        jLabelKode = new javax.swing.JLabel();
        jTextFieldPJwb = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldRuangan = new javax.swing.JTextField();
        jTextFieldKode = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(855, 645));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelRuangan.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        tabelRuangan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelRuangan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelRuanganMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelRuangan);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 730, 210));

        jLabel2.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel2.setText("jumlah");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 190, 20));

        jCheckBox1.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jCheckBox1.setText("Tampilkan seluruh ruangan");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 370, -1, 20));

        jButtonHapus1.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jButtonHapus1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/b_drop.png"))); // NOI18N
        jButtonHapus1.setText("HAPUS SELURUH RUANGAN");
        jButtonHapus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapus1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonHapus1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 260, 240, -1));

        jButtonSelesai.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jButtonSelesai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/s_success.png"))); // NOI18N
        jButtonSelesai.setText("SELESAI");
        jButtonSelesai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelesaiActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSelesai, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 220, 110, -1));

        jButtonPrint.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jButtonPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/b_print.png"))); // NOI18N
        jButtonPrint.setText("CETAK");
        jButtonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 220, 110, -1));

        jButtonHapus.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jButtonHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/b_drop.png"))); // NOI18N
        jButtonHapus.setText("HAPUS");
        jButtonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 190, 110, -1));

        jButtonTambah.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jButtonTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/b_index_add.png"))); // NOI18N
        jButtonTambah.setText("TAMBAH");
        jButtonTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonTambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 160, 110, -1));

        jButtonEdit.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jButtonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/b_edit.png"))); // NOI18N
        jButtonEdit.setText("UBAH");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 160, 110, -1));

        jButtonBatal.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jButtonBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/b_newdb.png"))); // NOI18N
        jButtonBatal.setText("BATAL");
        jButtonBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBatalActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonBatal, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 190, 110, -1));

        jLabel1.setFont(new java.awt.Font("Abyssinica SIL", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Ruangan Mansaraya");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 850, 43));

        jLabel3.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel3.setText("GEDUNG");

        jLabelKode1.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabelKode1.setText("Kode");

        jComboGedung.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jComboGedung.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboGedungItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboGedung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jLabelKode1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(288, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboGedung)
                    .addComponent(jLabelKode1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(162, 162, 162))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 450, 70));

        jLabel6.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel6.setText("PINDAH KE");

        jComboPindahG.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jComboPindahG.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboPindahGItemStateChanged(evt);
            }
        });

        jLabelKode.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabelKode.setText("Kode");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(23, 23, 23)
                .addComponent(jComboPindahG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelKode, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(445, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboPindahG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelKode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 730, 30));

        jTextFieldPJwb.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jTextFieldPJwb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPJwbKeyPressed(evt);
            }
        });
        getContentPane().add(jTextFieldPJwb, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, 250, -1));

        jLabel5.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel5.setText("Penanggung Jawab");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 150, 30));

        jLabel7.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel7.setText("Nama Ruangan");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 150, 30));

        jTextFieldRuangan.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jTextFieldRuangan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldRuanganKeyPressed(evt);
            }
        });
        getContentPane().add(jTextFieldRuangan, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, 250, -1));

        jTextFieldKode.setFont(new java.awt.Font("Abyssinica SIL", 0, 15)); // NOI18N
        jTextFieldKode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldKodeKeyPressed(evt);
            }
        });
        getContentPane().add(jTextFieldKode, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, 250, -1));

        jLabel4.setFont(new java.awt.Font("Abyssinica SIL", 0, 14)); // NOI18N
        jLabel4.setText("Kode Ruangan");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 150, 30));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSelesaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelesaiActionPerformed
        new Utama().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonSelesaiActionPerformed

    private void jTextFieldRuanganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRuanganKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextFieldPJwb.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldRuanganKeyPressed

    private void jTextFieldPJwbKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPJwbKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonTambah.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldPJwbKeyPressed

    private void jButtonTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahActionPerformed

        if (jTextFieldKode.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Isi kode ruangan !");
            jTextFieldKode.requestFocus();
        } else if (jTextFieldRuangan.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Isi nama ruangan !");
            jTextFieldRuangan.requestFocus();
        } else if (jTextFieldPJwb.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Isi penanggung jawab ruangan !");
            jTextFieldPJwb.requestFocus();
        } else {
            cekduplikat();
            if (ada == true) {
                jTextFieldKode.requestFocus();
            } else {
                insert();
            }
        }
        ada = false;
    }//GEN-LAST:event_jButtonTambahActionPerformed

    private void tabelRuanganMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelRuanganMouseClicked
        int t = tabelRuangan.getSelectedRow();
        if (t == -1) {
            return;
        }
        String nGedung = (String) model.getValueAt(t, 0);
        jComboPindahG.setSelectedItem(nGedung);
        String kode = (String) model.getValueAt(t, 1);
        jTextFieldKode.setText(kode);
        String nRuangan = (String) model.getValueAt(t, 2);
        jTextFieldRuangan.setText(nRuangan);
        String PJwb = (String) model.getValueAt(t, 3);
        jTextFieldPJwb.setText(PJwb);

        tampil();
    }//GEN-LAST:event_tabelRuanganMouseClicked
    void hilang() {
        jLabel6.setVisible(false);
        jComboPindahG.setVisible(false);
        jLabelKode.setVisible(false);
    }

    void tampil() {
        jLabel6.setVisible(true);
        jComboPindahG.setVisible(true);
        jLabelKode.setVisible(true);
    }
    private void jButtonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusActionPerformed
        try {
            int tt = tabelRuangan.getSelectedRow();
            if (tt != -1) {
                int t = tabelRuangan.getSelectedRow();
                String kode = (String) model.getValueAt(t, 1);
                String nama = (String) model.getValueAt(t, 2);
                int h = JOptionPane.showConfirmDialog(null, "Hapus ruang " + nama
                        + " dengan kode " + kode + " ?",
                        "Konfirmasi",
                        JOptionPane.YES_NO_OPTION);
                if (h == JOptionPane.YES_OPTION) {
                    hapus();
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Klik tombol HAPUS kembali setelah"
                        + " anda memilih data pada tabel yang akan dihapus!");
            }
            ada = false;
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(rootPane, "Error hapus\n" + e.getMessage());
        }
    }//GEN-LAST:event_jButtonHapusActionPerformed

    private void jButtonBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBatalActionPerformed
        kosong();
        hilang();
        ada = false;
        tabelRuangan.clearSelection();
    }//GEN-LAST:event_jButtonBatalActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        try {
            int tt = tabelRuangan.getSelectedRow();
            if (tt != -1) {
                int t = tabelRuangan.getSelectedRow();
                String nGedung = (String) model.getValueAt(t, 0);
                String kodeLama = (String) model.getValueAt(t, 1);
                String namaLama = (String) model.getValueAt(t, 2);
                String pJwbLama = (String) model.getValueAt(t, 3);
                String pindah = jComboPindahG.getSelectedItem().toString();
                String kode = jTextFieldKode.getText();
                String nama = jTextFieldRuangan.getText();
                String pJwb = jTextFieldPJwb.getText();
                if (nGedung.equals(pindah) && kodeLama.equals(kode)
                        && namaLama.equals(nama) && pJwbLama.equals(pJwb)) {
                    JOptionPane.showMessageDialog(rootPane, "Anda belum memodifikasi data!");
                } else {
                    int h = JOptionPane.showConfirmDialog(null, "Edit " + namaLama + " ?",
                            "Konfirmasi",
                            JOptionPane.YES_NO_OPTION);
                    if (h == JOptionPane.YES_OPTION) {
                        update();
                    }
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Klik tombol UBAH kembali setelah anda "
                        + "memilih data pada tabel dan memodifikasinya!");
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(rootPane, "Error Edit \n" + e.getMessage());
        }
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {
            tampilSemua();
        } else {
            tampilPerGedung();
        }
        kosong();
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jComboGedungItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboGedungItemStateChanged
        try {
            String namaGedung = jComboGedung.getSelectedItem().toString();
            Connection c = Koneksi.getkoneksi();
            Statement s = c.createStatement();

            String sql = "select * from gedung where nama_gedung='" + namaGedung + "'";
            ResultSet r = s.executeQuery(sql);

            while (r.next()) {
                String kodeGedung = r.getString("kode_gedung");
                jLabelKode1.setText(kodeGedung);
            }
            r.close();
            s.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error masukkan kode \n" + e.getMessage());
        }
        tampilPerGedung();
        kosong();
    }//GEN-LAST:event_jComboGedungItemStateChanged

    @SuppressWarnings("unchecked")
    private void jButtonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintActionPerformed
        if (jCheckBox1.isSelected()) {
            try {
                String filename = "src/laporan/RuanganAll.jasper";
                Connection con = Koneksi.getkoneksi();

                File report = new File(filename);
                @SuppressWarnings("deprecation")
                JasperReport jsp = (JasperReport) JRLoader.loadObject(report.getPath());
                JasperPrint jspprint = JasperFillManager.fillReport(jsp, null, con);
                JasperViewer.viewReport(jspprint, false);

                JasperViewer.setDefaultLookAndFeelDecorated(true);

            } catch (JRException e) {
                JOptionPane.showMessageDialog(rootPane, "Error cetak : " + e.getMessage());
            }
        } else {
            try {
                String filename = "src/laporan/Ruangan.jasper";
                Connection con = Koneksi.getkoneksi();
                HashMap parameter = new HashMap();
                //ambil parameter
                parameter.put("perbangunan", jComboGedung.getSelectedItem().toString());

                File report = new File(filename);
                @SuppressWarnings("deprecation")
                JasperReport jsp = (JasperReport) JRLoader.loadObject(report.getPath());
                JasperPrint jspprint = JasperFillManager.fillReport(jsp, parameter, con);
                JasperViewer.viewReport(jspprint, false);

                JasperViewer.setDefaultLookAndFeelDecorated(true);

            } catch (JRException e) {
                JOptionPane.showMessageDialog(rootPane, "Error cetak : " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButtonPrintActionPerformed

    private void jComboPindahGItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboPindahGItemStateChanged
        try {
            String namaGedung = jComboPindahG.getSelectedItem().toString();
            Connection c = Koneksi.getkoneksi();
            Statement s = c.createStatement();

            String sql = " select * from gedung where nama_gedung='" + namaGedung + "'";
            ResultSet r = s.executeQuery(sql);

            while (r.next()) {
                String kodeGedung = r.getString("kode_gedung");
                jLabelKode.setText(kodeGedung);
            }
            r.close();
            s.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error masukkan kode \n" + e.getMessage());
        }
    }//GEN-LAST:event_jComboPindahGItemStateChanged

    private void jButtonHapus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapus1ActionPerformed
        int h = JOptionPane.showConfirmDialog(null, "Hapus semua ruangan ?",
                "Konfirmasi",
                JOptionPane.YES_NO_OPTION);
        if (h == JOptionPane.YES_OPTION) {
            hapusAll();
        }
    }//GEN-LAST:event_jButtonHapus1ActionPerformed

    private void jTextFieldKodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldKodeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTextFieldRuangan.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldKodeKeyPressed

    //
    public void update() {
        String kode = jTextFieldKode.getText();
        String nRuangan = jTextFieldRuangan.getText();
        String pJwb = jTextFieldPJwb.getText();
        try {
            int t = tabelRuangan.getSelectedRow();
            String kodeLama = (String) model.getValueAt(t, 1);
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "update ruangan set "
                    + "kode_ruangan='" + kode + "', "
                    + "nama_ruangan='" + nRuangan + "', "
                    + "penanggung_jawab='" + pJwb + "', "
                    + "gedungfk='" + jLabelKode.getText() + "' "
                    + "where kode_ruangan='" + kodeLama + "'";
            PreparedStatement p = c.prepareStatement(sql);
            p.executeUpdate();
            p.close();
            JOptionPane.showMessageDialog(null, "Data berhasil di update");
            if (jCheckBox1.isSelected()) {
                tampilSemua();
            } else {
                tampilPerGedung();
            }
            kosong();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error update \n" + e.getMessage());
        }
    }

//
    public void hapus() {
        try {
            int t = tabelRuangan.getSelectedRow();
            String kode = (String) model.getValueAt(t, 1);
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "delete from ruangan where kode_ruangan='" + kode + "'";
            PreparedStatement p = c.prepareStatement(sql);
            p.executeUpdate();
            p.close();
            JOptionPane.showMessageDialog(null, "Data terhapus");
            if (jCheckBox1.isSelected()) {
                tampilSemua();
            } else {
                tampilPerGedung();
            }
            kosong();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error hapus data\n" + e.getMessage());
        }
    }

    public void hapusAll() {
        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "truncate table ruangan";
            PreparedStatement p = c.prepareStatement(sql);
            p.executeUpdate();
            p.close();
            JOptionPane.showMessageDialog(null, "Semua data terhapus");
            if (jCheckBox1.isSelected()) {
                tampilSemua();
            } else {
                tampilPerGedung();
            }
            kosong();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error hapus semua data\n" + e.getMessage());
        }
    }

    //
    public void insert() {
        String kode = jTextFieldKode.getText();
        String nRuangan = jTextFieldRuangan.getText();
        String PJwb = jTextFieldPJwb.getText();

        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "insert into ruangan set "
                    + "gedungfk='" + jLabelKode1.getText() + "', "
                    + "kode_ruangan='" + kode + "', "
                    + "nama_ruangan='" + nRuangan + "', "
                    + "penanggung_jawab='" + PJwb + "'";
            PreparedStatement p = c.prepareStatement(sql);
            p.executeUpdate();
            p.close();
            JOptionPane.showMessageDialog(null, "Ruangan tersimpan");
            if (jCheckBox1.isSelected()) {
                tampilSemua();
            } else {
                tampilPerGedung();
            }
            kosong();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error insert data\n"
                    + "Nama ruangan sudah ada atau data tidak valid\n" + e.getMessage());
        }
    }
    public boolean ada = false;

    //
    public void kosong() {
        jTextFieldKode.setText(null);
        jTextFieldRuangan.setText(null);
        jTextFieldPJwb.setText(null);
        jTextFieldKode.requestFocus();
    }

    //
    public void cekduplikat() {
        String gedung = jComboGedung.getSelectedItem().toString();
        String kode = jTextFieldKode.getText();
        try {
            Connection c = Koneksi.getkoneksi();
            Statement s = c.createStatement();

            String sql = " select * from gedung,ruangan where gedung.kode_gedung=ruangan.gedungfk "
                    + "and nama_gedung='" + gedung + "'";
            ResultSet r = s.executeQuery(sql);

            while (r.next()) {
                String ruang = r.getString("ruangan.kode_ruangan");

                if (kode.equals(ruang)) {
                    JOptionPane.showMessageDialog(null, "Kode ruangan sudah ada!");
                    ada = true;
                    break;
                }
            }
            r.close();
            s.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error duplikat \n" + e.getMessage());
        }
    }

    //
    public void jml() {
        int a = tabelRuangan.getRowCount();
        jLabel2.setText("Jumlah Ruangan = " + String.valueOf(a));
    }

    //
    @SuppressWarnings("unchecked")
    public void iGedung() {
        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();
            String sql = "select nama_gedung from gedung";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                jComboGedung.addItem(rs.getString("nama_gedung"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error isi combo gedung\n" + e.getMessage());
        }

    }

    //
    @SuppressWarnings("unchecked")
    public void iPindahG() {
        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();
            String sql = "select nama_gedung from gedung";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                jComboPindahG.addItem(rs.getString("nama_gedung"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error isi combo gedung\n" + e.getMessage());
        }

    }

    //
    public void formatTabel() {
        model = new DefaultTableModel();

        tabelRuangan.setModel(model);

        model.addColumn("Gedung");
        model.addColumn("Kode Ruangan");
        model.addColumn("Nama Ruangan");
        model.addColumn("Penanggung Jawab");
        model.addColumn("keterangan");
        TableColumn kol;
        tabelRuangan.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        kol = tabelRuangan.getColumnModel().getColumn(0);
        kol.setPreferredWidth(110);
        kol = tabelRuangan.getColumnModel().getColumn(1);
        kol.setPreferredWidth(100);
        kol = tabelRuangan.getColumnModel().getColumn(2);
        kol.setPreferredWidth(210);
        kol = tabelRuangan.getColumnModel().getColumn(3);
        kol.setPreferredWidth(160);
        kol = tabelRuangan.getColumnModel().getColumn(4);
        kol.setPreferredWidth(130);
    }

    //
    public void tampilSemua() {
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();

        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "select * from gedung,ruangan where "
                    + "gedung.kode_gedung=ruangan.gedungfk order by nama_gedung, nama_ruangan";
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                Object[] o = new Object[5];
                o[0] = rs.getString("gedung.nama_gedung");
                o[1] = rs.getString("ruangan.kode_ruangan");
                o[2] = rs.getString("ruangan.nama_ruangan");
                o[3] = rs.getString("ruangan.penanggung_jawab");
                o[4] = rs.getString("gedung.keterangan");

                model.addRow(o);
            }
            rs.close();
            hilang();
            jml();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error tampil ruangan\n" + e.getMessage());
        }
    }

//
    public void tampilPerGedung() {
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        String gedung = jComboGedung.getSelectedItem().toString();
        try {
            Connection c = Koneksi.getkoneksi();
            Statement st = c.createStatement();

            String sql = "select * from gedung,ruangan where gedung.kode_gedung=ruangan.gedungfk and "
                    + "gedung.nama_gedung='" + gedung + "' order by nama_ruangan";
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                Object[] o = new Object[5];
                o[0] = rs.getString("gedung.nama_gedung");
                o[1] = rs.getString("ruangan.kode_ruangan");
                o[2] = rs.getString("ruangan.nama_ruangan");
                o[3] = rs.getString("ruangan.penanggung_jawab");
                o[4] = rs.getString("gedung.keterangan");

                model.addRow(o);
            }
            rs.close();
            jCheckBox1.setSelected(false);
            hilang();
            jml();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error tampil ruangan per gedung\n" + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Ruangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ruangan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBatal;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonHapus;
    private javax.swing.JButton jButtonHapus1;
    private javax.swing.JButton jButtonPrint;
    private javax.swing.JButton jButtonSelesai;
    private javax.swing.JButton jButtonTambah;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboGedung;
    private javax.swing.JComboBox jComboPindahG;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelKode;
    private javax.swing.JLabel jLabelKode1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldKode;
    private javax.swing.JTextField jTextFieldPJwb;
    private javax.swing.JTextField jTextFieldRuangan;
    private javax.swing.JTable tabelRuangan;
    // End of variables declaration//GEN-END:variables
}
